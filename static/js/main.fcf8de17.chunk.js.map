{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","_jsx","className","mode","children","_jsxs","href","title","type","id","aboutText","onClick","toggleMode","htmlFor","TextForm","text","setText","useState","_Fragment","style","color","heading","value","onChange","event","target","backgroundColor","rows","disabled","length","handleUpClick","newText","toUpperCase","showAlert","handleLoClick","toLowerCase","handleClearClick","handleCopy","navigator","clipboard","writeText","handleExtraSpaces","split","join","filter","element","defaultProps","Alert","height","alert","role","word","lower","charAt","slice","capitalize","msg","App","setMode","setAlert","message","setTimeout","document","body","Date","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","React","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.fcf8de17.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n// import { Link } from 'react-router-dom';\n\nexport default function Navbar(props) {\n    return (\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\n            <div className=\"container-fluid\">\n                {/* <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link> */}\n                <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n                        <li className=\"nav-item\">\n                            {/* <Link className=\"nav-link\" aria-current=\"page\" to=\"/\">Home</Link> */}\n                            <a className=\"nav-link\" aria-current=\"page\" href=\"#\">Home</a>\n                        </li>\n                        <li className=\"nav-item\">\n                            {/* <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link> */}\n                            <a className=\"nav-link\" href=\"/about\">{props.aboutText}</a>\n                        </li>\n                    </ul>\n                    <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\n                        <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\n                        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable DarkMode</label>\n                    </div>\n                </div>\n            </div>\n        </nav>\n    )\n}\n\nNavbar.propTypes = {\n    title: PropTypes.string.isRequired,\n    // aboutText: PropTypes.string.isRequired\n}\n\nNavbar.defaultProps = {\n    title: 'Set title here',\n    // aboutText: 'About'\n  };","import React, {useState} from 'react'\n\n\nexport default function TextForm(props) {\n    const handleUpClick = ()=>{\n        let newText = text.toUpperCase();\n        setText(newText)\n        props.showAlert(\"Converted to uppercase!\", \"success\");\n    }\n\n    const handleLoClick = ()=>{ \n        let newText = text.toLowerCase();\n        setText(newText)\n        props.showAlert(\"Converted to lowercase!\", \"success\");\n    }\n\n    const handleClearClick = ()=>{ \n        let newText = '';\n        setText(newText);\n        props.showAlert(\"Text Cleared!\", \"success\");\n    }\n\n    const handleOnChange = (event)=>{\n        setText(event.target.value) \n    }\n\n    // Credits: A\n    const handleCopy = () => {\n        navigator.clipboard.writeText(text); \n        props.showAlert(\"Copied to Clipboard!\", \"success\");\n    }\n\n    // Credits: Coding Wala\n    const handleExtraSpaces = () => {\n        let newText = text.split(/[ ]+/);\n        setText(newText.join(\" \"));\n        props.showAlert(\"Extra spaces removed!\", \"success\");\n    }\n\n    const [text, setText] = useState(''); \n    // text = \"new text\"; // Wrong way to change the state\n    // setText(\"new text\"); // Correct way to change the state\n    return (\n        <>\n        <div className=\"container\" style={{color: props.mode==='dark'?'white':'#042743'}}> \n            <h1 className='mb-4'>{props.heading}</h1>\n            <div className=\"mb-3\"> \n            <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor: props.mode==='dark'?'#13466e':'white', color: props.mode==='dark'?'white':'#042743'}} id=\"myBox\" rows=\"8\"></textarea>\n            </div>\n            <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleUpClick}>Convert to Uppercase</button>\n            <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleLoClick}>Convert to Lowercase</button>\n            <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleClearClick}>Clear Text</button>\n            <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleCopy}>Copy Text</button>\n            <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleExtraSpaces}>Remove Extra Spaces</button>\n        </div>\n        <div className=\"container my-3\" style={{color: props.mode==='dark'?'white':'#042743'}}>\n            <h2>Your text summary</h2>\n            <p>{text.split(/\\s+/).filter((element)=>{return element.length!==0}).length} words and {text.length} characters</p>\n            <p>{0.008 *  text.split(/\\s+/).filter((element)=>{return element.length!==0}).length} Minutes read</p>\n            <h2>Preview</h2>\n            <p>{text.length>0?text:\"Nothing to preview!\"}</p>\n        </div>\n        </>\n    )\n}\n","import React from 'react'\n\nfunction Alert(props) {\n    const capitalize = (word)=>{\n        const lower = word.toLowerCase();\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\n    }\n    return (\n        <div style={{height: '50px'}}>\n        {props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\n           <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg} \n        </div>}\n        </div>\n    )\n}\n\nexport default Alert\n","import './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\n// import About from './components/About';\nimport React, { useState } from 'react';\nimport Alert from './components/Alert';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route\n// } from \"react-router-dom\";\n\n \nfunction App() {\n  const [mode, setMode] = useState('light'); // Whether dark mode is enabled or not\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type)=>{\n      setAlert({\n        msg: message,\n        type: type\n      })\n      setTimeout(() => {\n          setAlert(null);\n      }, 1500);\n  }\n\n  const toggleMode = ()=>{\n    if(mode === 'light'){\n      setMode('dark');\n      document.body.style.backgroundColor = '#042743';\n      showAlert(\"Dark mode has been enabled\", \"success\");\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been enabled\", \"success\");\n    }\n  }\n  return (\n    <>\n    {/* <Router> */}\n    <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} key={new Date()} />\n    <Alert alert={alert}/>\n    {/* <div className=\"container my-3\">\n    <Switch>\n    {/* /users --> Component 1\n        /users/home --> Component 2 */}\n          {/* <Route exact path=\"/about\">\n            <About mode={mode} />\n          </Route>\n          <Route exact path=\"/\">\n          </Route>\n    </Switch>\n    </div> */} \n            <TextForm showAlert={showAlert} heading=\"Try TextUtils - word counter, character counter, remove extra spaces\" mode={mode}/>\n    {/* </Router> */}\n    </> \n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}